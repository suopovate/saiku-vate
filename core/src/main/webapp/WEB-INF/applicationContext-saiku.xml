<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
			   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


	<context:annotation-config/>

	<security:global-method-security secured-annotations="enabled">
	</security:global-method-security>

	<!--
    Saiku currently ships with basic authentication working out of the box, below is also the code for Digest authentication,
    should you want digest authentication for you application comment out the basic authentication block and enable digest authentication.
    We are also working on other authentication methods, namely OAuth and Remember me token based policies.

    To add and remove users you currently have to edit WEB-INF/users.properties, this will be replaced with an admin console in due course and
    you can also swap this out for JDBC backed security lists and (although untested) technically LDAP etc.

    If you modify these files in anyway it would be very useful if you sent us patches for any useful changes you make.
     -->

	<!-- BASIC AUTHENTICATION -->
	<security:http pattern="/rest/saiku/info" security="none">
	</security:http>
	<security:http pattern="/rest/saiku/info/ui-settings" security="none">
	</security:http>
	<security:http pattern="/repository/**" security="none">
	</security:http>
	<security:http auto-config='true' use-expressions="true">
		<!--注意，如果开启匿名访问则一定也要加上 isFullyAuthenticated() 否则 登录用户就会无法访问匿名接口-->
		<!--access-denied-page="/login.jsp"-->
		<!--去掉iframe跨域限制-->
		<security:headers>
		<security:frame-options disabled="true"></security:frame-options>
		</security:headers>
		<!--去掉iframe跨域限制-->

		<security:csrf disabled="true"/>

		<security:intercept-url pattern="/serverdocs/**" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/saiku/session*" access="isAnonymous() or isFullyAuthenticated()"/>

		<!--用户同步相应接口开放-->
		<security:intercept-url pattern="/rest/saiku/admin/allUsers" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/saiku/admin/addUsers" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/saiku/admin/updateUsers" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/saiku/admin/delUsers" access="isAnonymous() or isFullyAuthenticated()"/>
		<!--用户同步相应接口开放-->

		<!--看板，移动端接口使用的相关接口开放-->
		<security:intercept-url pattern="/rest/saiku/api/repository/byactk" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/saiku/export/json/byactk" access="isAnonymous() or isFullyAuthenticated()"/>
		<!--看板，移动端接口使用的相关接口开放-->

		<security:intercept-url pattern="/rest/saiku/api/license/usercount" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:intercept-url pattern="/rest/**" access="isFullyAuthenticated()"/>
		<security:intercept-url pattern="/json/**" access="isFullyAuthenticated()"/>
		<security:intercept-url pattern="/WEB-INF/classes/legacy-schema" access="isAnonymous() or isFullyAuthenticated()"/>
		<security:logout logout-url="/logout"/>
		<security:http-basic/>
	</security:http>
	<import resource="applicationContext-spring-security.xml"/>

	<!-- Below is the preauth configuration. If you want to use preauth, please
         comment the previous configuration and uncomment the next lines -->
	<!--
      <import resource="applicationContext-spring-security.xml"/>

      <security:http pattern="/rest/saiku/info" security="none">
      </security:http>
      <security:http pattern="/rest/saiku/info/ui-settings" security="none">
      </security:http>
      <security:http pattern="/repository/**" security="none">
      </security:http>

      <security:http auto-config='true' use-expressions="true" entry-point-ref="http403EntryPoint">
        <security:csrf disabled="true"/>
        <security:intercept-url pattern="/serverdocs/**" access="isAnonymous()" />
        <security:intercept-url pattern="/rest/saiku/session*" access="isAnonymous() or isFullyAuthenticated()" />
        <security:intercept-url pattern="/rest/saiku/api/license/usercount" access="isAnonymous() or isFullyAuthenticated()" />
        <security:intercept-url pattern="/rest/**" access="isFullyAuthenticated()" />
        <security:intercept-url pattern="/json/**" access="isFullyAuthenticated()" />
        <security:intercept-url pattern="/WEB-INF/classes/legacy-schema" access="isAnonymous()" />
        <security:logout logout-url="/logout"/>
        <security:http-basic/>
        <security:custom-filter after="BASIC_AUTH_FILTER" ref="preAuthFilter"/>
      </security:http>
    -->

</beans>
